package JDBC;

import java.sql.*;
import java.util.InputMismatchException;
import java.util.Scanner;

public class Employee {

    public static void main(String[] args) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/employee", "root", "root");

            int ans = 0;
            Scanner sc = new Scanner(System.in);

            while (ans <= 4) {
                System.out.println("1. Insert a record");
                System.out.println("2. Delete a record");
                System.out.println("3. Modify a record");
                System.out.println("4. Display records");
                System.out.println("5. Exit");

                System.out.println("Enter your choice:");
                int ch = getValidIntegerInput(sc); // Validate choice input

                int eno;
                String ename;
                int age;

                switch (ch) {
                    case 1:
                        System.out.println("Enter Employee number:");
                        eno = getValidIntegerInput(sc); // Validate sno input

                        System.out.println("Enter Employee name:");
                        sc.nextLine(); // Consume newline left by nextInt()
                        ename = sc.nextLine(); // Read full name

                        System.out.println("Enter Employee age:");
                        age = getValidIntegerInput(sc); // Validate age input

                        String insertQuery = "INSERT INTO EMP (eno, ename, age) VALUES (?, ?, ?)";
                        PreparedStatement psInsert = con.prepareStatement(insertQuery);
                        psInsert.setInt(1, eno);
                        psInsert.setString(2, ename);
                        psInsert.setInt(3, age);
                        psInsert.executeUpdate();
                        System.out.println("Record inserted successfully");
                        break;

                    case 2:
                        System.out.println("Enter Employee number:");
                        eno = getValidIntegerInput(sc); // Validate sno input

                        String deleteQuery = "DELETE FROM EMP WHERE eno=?";
                        PreparedStatement psDelete = con.prepareStatement(deleteQuery);
                        psDelete.setInt(1, eno);
                        psDelete.executeUpdate();
                        System.out.println("Record deleted successfully");
                        break;

                    case 3:
                        System.out.println("Enter Employee Number:");
                        eno = getValidIntegerInput(sc); // Validate sno input

                        System.out.println("Enter Employee Name:");
                        sc.nextLine(); // Consume newline left by nextInt()
                        ename = sc.nextLine();

                        String updateQuery = "UPDATE Emp SET ename=? WHERE eno=?";
                        PreparedStatement psUpdate = con.prepareStatement(updateQuery);
                        psUpdate.setString(1, ename);
                        psUpdate.setInt(2, eno);
                        psUpdate.executeUpdate();
                        System.out.println("Record updated successfully");
                        break;

                    case 4:
                        Statement stmt = con.createStatement();
                        ResultSet rs = stmt.executeQuery("SELECT * FROM Emp");
                        while (rs.next()) {
                            System.out.println(rs.getInt("eno") + " " + rs.getString("ename") + " " + rs.getInt("age"));
                        }
                        break;

                    case 5:
                        ans = 5;
                        break;

                    default:
                        System.out.println("Invalid choice, please try again.");
                }
            }

            sc.close();
            con.close();
        } catch (Exception e) {
            System.out.println("An error occurred: " + e.getMessage());
        }
    }

    // Helper method to validate integer input
    private static int getValidIntegerInput(Scanner sc) {
        while (true) {
            try {
                return sc.nextInt();
            } catch (InputMismatchException e) {
                System.out.println("Invalid input. Please enter a valid integer.");
                sc.next(); // Clear the invalid input from the scanner
            }
        }
    }
}
